.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 32
LDU 8
OVER
GTINT 1
THROWIF 73
LDREF
ENDS
CTOS
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
XCHG S1, S2
PAIR
SWAP
LDREF
ENDS
CTOS
LDMSGADDR
SWAP
SINGLE
XCHG S1, S2
PAIR
SWAP
LDU 32
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
ROLLREV 3
TRIPLE
SWAP
ENDS
.loc ../contracts/OracleProxy.sol, 53
GETGLOB 9
GETGLOB 10
SDEQ
THROWIFNOT 1007
.loc ../contracts/OracleProxy.sol, 55
ROLL 4
SETGLOB 12
.loc ../contracts/OracleProxy.sol, 56
ROLL 3
SETGLOB 13
.loc ../contracts/OracleProxy.sol, 57
ROT
SETGLOB 14
.loc ../contracts/OracleProxy.sol, 58
SWAP
SETGLOB 15
.loc ../contracts/OracleProxy.sol, 59
SETGLOB 16
.loc ../contracts/OracleProxy.sol, 61
CALLREF {
	CALL $_collectPrice_86ca321f_internal_macro$
}
.loc ../contracts/OracleProxy.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setExecuteCallback
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OracleProxy.sol, 64
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 32
LDU 128
LDU 32
LDU 8
OVER
GTINT 1
THROWIF 73
ENDS
.loc ../contracts/OracleProxy.sol, 0
CALLREF {
	CALL $setExecuteCallback_9cee4360_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setExecuteCallback_9cee4360_internal_macro
.loc ../contracts/OracleProxy.sol, 71
GETGLOB 9
GETGLOB 10
SDEQ
THROWIFNOT 1007
.loc ../contracts/OracleProxy.sol, 73
ROLL 4
SETGLOB 18
.loc ../contracts/OracleProxy.sol, 74
ROLL 3
SETGLOB 17
.loc ../contracts/OracleProxy.sol, 75
ROT
SETGLOB 19
.loc ../contracts/OracleProxy.sol, 76
SWAP
SETGLOB 20
.loc ../contracts/OracleProxy.sol, 77
SETGLOB 21
.loc ../contracts/OracleProxy.sol, 78
PUSHINT 0
SETGLOB 24
.loc ../contracts/OracleProxy.sol, 0

.macro setCloseCallback
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OracleProxy.sol, 81
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 32
ENDS
.loc ../contracts/OracleProxy.sol, 0
CALLREF {
	CALL $setCloseCallback_72191088_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setCloseCallback_72191088_internal_macro
.loc ../contracts/OracleProxy.sol, 82
GETGLOB 9
GETGLOB 10
SDEQ
THROWIFNOT 1007
.loc ../contracts/OracleProxy.sol, 84
SWAP
SETGLOB 18
.loc ../contracts/OracleProxy.sol, 85
SETGLOB 17
.loc ../contracts/OracleProxy.sol, 86
PUSHINT 1
SETGLOB 24
.loc ../contracts/OracleProxy.sol, 0

.macro setLiquidationCallback
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OracleProxy.sol, 89
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
.loc ../contracts/OracleProxy.sol, 0
CALLREF {
	CALL $setLiquidationCallback_44613735_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setLiquidationCallback_44613735_internal_macro
.loc ../contracts/OracleProxy.sol, 90
GETGLOB 9
GETGLOB 10
SDEQ
THROWIFNOT 1007
.loc ../contracts/OracleProxy.sol, 92
SWAP
SETGLOB 23
.loc ../contracts/OracleProxy.sol, 93
SETGLOB 22
.loc ../contracts/OracleProxy.sol, 94
PUSHINT 2
SETGLOB 24
.loc ../contracts/OracleProxy.sol, 0

.globl	_collectPrice_86ca321f_internal
.type	_collectPrice_86ca321f_internal, @function
CALL $_collectPrice_86ca321f_internal_macro$

.macro _collectPrice_86ca321f_internal_macro
.loc ../contracts/OracleProxy.sol, 98
GETGLOB 14
IFREFELSEREF
{
	CALL $_collectPriceFromDex_607ca09b_internal_macro$
}
{
	CALL $_collectPriceFromChainlink_10fb7f82_internal_macro$
}
.loc ../contracts/OracleProxy.sol, 0

.globl	_collectPriceFromDex_607ca09b_internal
.type	_collectPriceFromDex_607ca09b_internal, @function
CALL $_collectPriceFromDex_607ca09b_internal_macro$

.macro _collectPriceFromDex_607ca09b_internal_macro
.loc ../contracts/OracleProxy.sol, 106
GETGLOB 15
FIRST
.loc ../contracts/OracleProxy.sol, 108
PUSHINT 0
PUSHCONT {
	PUSH2 S0, S1
	INDEX2 1, 0
	LESS
}
PUSHCONT {
	.loc ../contracts/OracleProxy.sol, 109
	PUSH2 S0, S1
	INDEX2 1, 1
	PUSHINT 32
	DICTUGETREF
	THROWIFNOT 50
	CTOS
	CALLREF {
		LDMSGADDR
		LDREF
		ENDS
		CTOS
		LDMSGADDR
		LDREF
		ENDS
		CTOS
		LDMSGADDR
		ENDS
		TRIPLE
	}
	.loc ../contracts/OracleProxy.sol, 110
	OVER
	NEWC
	STU 256
	ENDC
	.loc ../contracts/OracleProxy.sol, 112
	MYADDR
	NOW
	DUP
	DEC
	UFITS 32
	ROLL 4
	FIRST
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 2803819077499249229031122585109857988247553
	STUR 143
	ROLLREV 4
	NEWC
	STSLICECONST x5668c911
	STU 32
	STU 32
	STSLICE
	STREF
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OracleProxy.sol, 108
	INC
	.loc ../contracts/OracleProxy.sol, 0
}
WHILE
DROP2
.loc ../contracts/OracleProxy.sol, 0

.globl	_collectPriceFromChainlink_10fb7f82_internal
.type	_collectPriceFromChainlink_10fb7f82_internal, @function
CALL $_collectPriceFromChainlink_10fb7f82_internal_macro$

.macro _collectPriceFromChainlink_10fb7f82_internal_macro
.loc ../contracts/OracleProxy.sol, 0

.globl	_sendCallback_af038cfa_internal
.type	_sendCallback_af038cfa_internal, @function
CALL $_sendCallback_af038cfa_internal_macro$

.macro _sendCallback_af038cfa_internal_macro
.loc ../contracts/OracleProxy.sol, 121
GETGLOB 24
PUSHCONT {
	GETGLOB 24
	EQINT 1
	PUSHCONT {
		.loc ../contracts/OracleProxy.sol, 134
		GETGLOB 16
		OVER
		GETGLOB 13
		GETGLOB 17
		GETGLOB 18
		GETGLOB 11
		GETGLOB 10
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 1
		STUR 111
		ROLLREV 6
		NEWC
		STSLICECONST x4c4becc4
		STU 64
		STSLICE
		STU 32
		STU 32
	}
	PUSHCONT {
		.loc ../contracts/OracleProxy.sol, 143
		GETGLOB 16
		OVER
		GETGLOB 22
		GETGLOB 13
		GETGLOB 23
		GETGLOB 11
		GETGLOB 10
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 1
		STUR 111
		ROLLREV 6
		NEWC
		STSLICECONST x7414b356
		STU 64
		STSLICE
		STU 32
		SWAP
		UNPAIR
		XCHG S2
		STU 32
		STDICT
	}
	IFELSE
	STU 128
	SWAP
	UNTRIPLE
	REVERSE 4, 0
	STU 32
	STU 32
	SWAP
	NEWC
}
PUSHCONT {
	.loc ../contracts/OracleProxy.sol, 122
	GETGLOB 16
	OVER
	GETGLOB 21
	GETGLOB 20
	GETGLOB 19
	GETGLOB 13
	GETGLOB 17
	GETGLOB 18
	GETGLOB 11
	GETGLOB 10
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 9
	NEWC
	STSLICECONST x3ad54774
	STU 64
	STSLICE
	STU 32
	STU 32
	STU 128
	STU 32
	STU 8
	ROTREV
	NEWC
	STU 128
	SWAP
	UNTRIPLE
	REVERSE 4, 0
	STU 32
	STU 32
}
IFELSE
STSLICE
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/OracleProxy.sol, 0
DROP

.macro onRateCallback
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OracleProxy.sol, 155
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
	LDI 1
	SWAP
	NULLSWAPIFNOT
	PUSHCONT {
		LDU 256
		LDU 256
		LDU 32
		LDU 32
		ROLLREV 4
		TUPLE 4
	}
	IF
}
PUSHCONT {
	LDI 1
	SWAP
	NULLSWAPIFNOT
	PUSHCONT {
		LDU 256
		LDU 256
		LDU 32
		LDU 32
		ROLLREV 4
		TUPLE 4
	}
	IF
}
IFELSE
SWAP
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDREF
ENDS
.loc ../contracts/OracleProxy.sol, 0
CALLREF {
	CALL $onRateCallback_1ef6f290_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onRateCallback_1ef6f290_internal_macro
.loc ../contracts/OracleProxy.sol, 160
DUP
CTOS
LDU 256
ENDS
.loc ../contracts/OracleProxy.sol, 161
GETGLOB 15
FIRST
.loc ../contracts/OracleProxy.sol, 162
GETGLOB 9
BLKPUSH 2, 2
INDEX2 1, 1
PUSHINT 32
DICTUGETREF
THROWIFNOT 50
CTOS
CALLREF {
	LDMSGADDR
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	LDREF
	ENDS
	CTOS
	LDMSGADDR
	ENDS
	TRIPLE
}
FIRST
SDEQ
THROWIFNOT 1007
.loc ../contracts/OracleProxy.sol, 164
GETGLOB 9
GETGLOB 25
NEWC
PUSH S6
UNPAIR
XCHG S2
STU 32
STDICT
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 25
.loc ../contracts/OracleProxy.sol, 167
PUSHINT 0
NEWDICT
PAIR
GETGLOB 25
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	LDU 32
	PLDDICT
	PAIR
	PAIR
}
IF
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	PUSH2 S2, S0
	FIRST
	SWAP
	UNPAIR
	OVER
	INC
	ROLLREV 3
	PUSHINT 32
	DICTUSET
	PAIR
	POP S3
	FIRST
	OVER
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		LDU 32
		PLDDICT
		PAIR
		PAIR
	}
	IF
}
WHILE
DROP2
FIRST
OVER
INDEX2 1, 0
EQUAL
PUSHCONT {
	.loc ../contracts/OracleProxy.sol, 169
	DUP
	FIRST
	.loc ../contracts/OracleProxy.sol, 170
	PUSHINT 1000000000000000000
	.loc ../contracts/OracleProxy.sol, 172
	PUSH S2
	INDEX2 1, 1
	PUSHINT 0
	NULL
	PUSHCONT {
		PUSH2 S1, S2
		PUSHINT 32
		DICTUGETREF
		NULLSWAPIFNOT
		IFREF {
			CTOS
			CALLREF {
				LDMSGADDR
				LDREF
				ENDS
				CTOS
				LDMSGADDR
				LDREF
				ENDS
				CTOS
				LDMSGADDR
				ENDS
				TRIPLE
			}
		}
		DUP
		POP S2
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc ../contracts/OracleProxy.sol, 173
		PUSHINT 0
		.loc ../contracts/OracleProxy.sol, 174
		OVER
		FIRST
		GETGLOB 25
		PUSHINT 267
		DICTGET
		PUSHCONT {
			LDU 32
			PLDDICT
		}
		PUSHCONT {
			PUSHINT 0
			NEWDICT
		}
		IFELSE
		PAIR
		.loc ../contracts/OracleProxy.sol, 176
		PUSH S2
		SECOND
		PUSH S7
		SDEQ
		PUSHCONT {
			.loc ../contracts/OracleProxy.sol, 177
			PUSHINT 1
			OVER
			SECOND
			PUSHINT 32
			DICTUGET
			THROWIFNOT 50
			PLDU 128
			PUSHINT 1000000000000000000
			PUSHINT 0
			PUSH S3
			SECOND
			PUSHINT 32
			DICTUGET
			THROWIFNOT 50
			PLDU 128
			MULDIV
			UFITS 128
			POP S2
			.loc ../contracts/OracleProxy.sol, 178
			PUSH S2
			THIRD
			POP S7
		}
		PUSHCONT {
			PUSH S2
			THIRD
			PUSH S7
			SDEQ
			PUSHCONT {
				.loc ../contracts/OracleProxy.sol, 180
				PUSHINT 0
				OVER
				SECOND
				PUSHINT 32
				DICTUGET
				THROWIFNOT 50
				PLDU 128
				PUSHINT 1000000000000000000
				PUSHINT 1
				PUSH S3
				SECOND
				PUSHINT 32
				DICTUGET
				THROWIFNOT 50
				PLDU 128
				MULDIV
				UFITS 128
				POP S2
				.loc ../contracts/OracleProxy.sol, 181
				PUSH S2
				SECOND
				POP S7
			}
			PUSHCONT {
				.loc ../contracts/OracleProxy.sol, 183
				PUSHINT 4000
				THROWANY
			}
			IFELSE
		}
		IFELSE
		.loc ../contracts/OracleProxy.sol, 185
		DROP
		PUXC S4, S-1
		PUSHINT 1000000000000000000
		MULDIV
		UFITS 128
		POP S4
		.loc ../contracts/OracleProxy.sol, 0
		OVER
		INC
		POP S2
	}
	WHILE
	BLKDROP 3
	.loc ../contracts/OracleProxy.sol, 191
	PUSHINT 1000000000
	PUSHINT 1000000000000000000
	MULDIV
	UFITS 128
	.loc ../contracts/OracleProxy.sol, 192
	CALLREF {
		CALL $_sendCallback_af038cfa_internal_macro$
	}
	.loc ../contracts/OracleProxy.sol, 0
	DROP
}
IF
.loc ../contracts/OracleProxy.sol, 0
BLKDROP 5

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDU 64
LDREF
ENDS
CTOS
LDMSGADDR
LDU 32
LDU 8
OVER
GTINT 1
THROWIF 73
LDREF
ENDS
CTOS
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
XCHG S1, S2
PAIR
SWAP
LDREF
ENDS
CTOS
LDMSGADDR
SWAP
SINGLE
XCHG S1, S2
PAIR
SWAP
LDU 32
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
ROLLREV 3
TRIPLE
SWAP
LDU 32
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 32
LDU 8
OVER
GTINT 1
THROWIF 73
LDU 32
LDDICT
ROTREV
PAIR
SWAP
LDREF
ENDS
CTOS
LDMSGADDR
LDU 8
OVER
GTINT 2
THROWIF 73
LDDICT
ENDS
PUSHINT 0
GETGLOBVAR
GETGLOB 1
GETGLOB 2
GETGLOB 3
GETGLOB 4
GETGLOB 5
GETGLOB 6
GETGLOB 7
GETGLOB 8
GETGLOB 9
BLKSWAP 16, 10
PUSHINT 26
TUPLEVAR
POP C7
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHINT 0
	GETGLOBVAR
	GETGLOB 1
	GETGLOB 2
	GETGLOB 3
	GETGLOB 4
	GETGLOB 5
	GETGLOB 6
	GETGLOB 7
	GETGLOB 8
	GETGLOB 9
	PUSHINT 1
	PUSH S11
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHINT 2
	PUSH S12
	PUSHINT 64
	DICTUGET
	ZEROSWAPIFNOT
	PUSHCONT {
		PLDU 64
	}
	IF
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	NEWDICT
	PAIR
	PAIR
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SINGLE
	PAIR
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	TRIPLE
	PUSHINT 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 3, 0
	NEWDICT
	PAIR
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	NEWDICT
	PUSHINT 26
	TUPLEVAR
	POP C7
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
PUSH C7
FALSE
PUSHINT 26
SETINDEXVARQ
PUSHINT 27
UNTUPLEVAR
DROP
PUSHINT 26
PUSHINT 0
REVX
BLKDROP 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
STU 64
ROLLREV 14
NEWC
STSLICE
STU 32
STU 8
SWAP
UNPAIR
ROTREV
UNPAIR
XCHG S2
ROLLREV 13
NEWC
STSLICE
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
SWAP
UNSINGLE
SWAP
ROLLREV 11
NEWC
STSLICE
SWAP
UNTRIPLE
REVERSE 4, 0
STU 32
STU 32
ROLLREV 10
NEWC
STSLICE
STU 32
ROLLREV 8
NEWC
STSLICE
STU 128
STU 32
STU 8
SWAP
UNPAIR
XCHG S2
STU 32
STDICT
ROLLREV 3
NEWC
STSLICE
STU 8
STDICT
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 1235995617
LEQ
IFJMPREF {
	DUP
	PUSHINT 380201977
	EQUAL
	IFJMPREF {
		CALL $setExecuteCallback$
	}
	DUP
	PUSHINT 976638433
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1083019651
	EQUAL
	IFJMPREF {
		CALL $setLiquidationCallback$
	}
	DUP
	PUSHINT 1235995617
	EQUAL
	IFJMPREF {
		CALL $onRateCallback$
	}
}
DUP
PUSHINT 1850322626
EQUAL
IFJMPREF {
	CALL $setCloseCallback$
}

