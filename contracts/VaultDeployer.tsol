// SPDX-License-Identifier: UNLICENSED
pragma ever-solidity >= 0.62.0;

import {Errors} from "./libraries/Errors.tsol";
import {GravixVault} from "./GravixVault.tsol";


contract VaultDeployer {
    uint32 static deployNonce;

    TvmCell vaultCode;
    TvmCell oracleProxyCode;
    TvmCell platformCode;
    TvmCell gravixAccountCode;

    constructor(TvmCell _vault, TvmCell _proxy, TvmCell _platform, TvmCell _account) public {
        require (tvm.pubkey() != 0, Errors.WRONG_PUBKEY);
        require (tvm.pubkey() == msg.pubkey(), Errors.WRONG_PUBKEY);
        tvm.accept();

        vaultCode = _vault;
        oracleProxyCode = _proxy;
        platformCode = _platform;
        gravixAccountCode = _account;
    }

    function deployVault(
        address _owner,
        address _usdt,
        address _stg_usdt,
        address _priceNode,
        uint256 _pricePubkey
    ) external view returns (address) {
        tvm.accept();

        TvmCell stateInit = tvm.buildStateInit({
            contr: GravixVault,
            varInit: {
                deployNonce: deployNonce,
                platformCode: platformCode
            },
            pubkey: tvm.pubkey(),
            code: vaultCode
        });

        address vault = new GravixVault{
            stateInit: stateInit,
            value: 2 ever
        }(

            _owner,
            _usdt,
            _stg_usdt,
            _priceNode,
            _pricePubkey,
            gravixAccountCode,
            oracleProxyCode
        );
        return vault;
    }
}
